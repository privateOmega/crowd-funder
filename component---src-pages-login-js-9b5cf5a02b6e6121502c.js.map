{"version":3,"sources":["webpack:///./node_modules/@material-ui/icons/esm/Lock.js","webpack:///./node_modules/@material-ui/icons/esm/Visibility.js","webpack:///./node_modules/@material-ui/icons/esm/VisibilityOff.js","webpack:///./src/pages/login.js"],"names":["createSvgIcon","createElement","d","useStyles","makeStyles","loginPageStyles","loginValidationSchema","Yup","email","required","password","min","withFirebase","firebase","classes","useState","showPassword","setShowPassword","isLoggedIn","navigate","style","backgroundImage","require","backgroundSize","backgroundPosition","title","className","container","justify","xs","sm","md","Card","variant","initialValues","validationSchema","onSubmit","values","a","setSubmitting","auth","signInWithEmailAndPassword","user","setUser","console","log","errors","touched","handleChange","handleSubmit","isSubmitting","CardHeader","CardContent","FormControl","fullWidth","formControl","InputLabel","htmlFor","Input","id","onChange","value","startAdornment","InputAdornment","position","Person","FormHelperText","error","Boolean","type","Lock","endAdornment","IconButton","onClick","Visibility","VisibilityOff","CardActions","color","disabled"],"mappings":"gWAEe,SAAAA,EAAA,GAAc,IAAMC,cAAc,OAAQ,CACvDC,EAAG,sOACD,QCFW,SAAAF,EAAA,GAAc,IAAMC,cAAc,OAAQ,CACvDC,EAAG,sNACD,cCFW,SAAAF,EAAA,GAAc,IAAMC,cAAc,OAAQ,CACvDC,EAAG,8fACD,iB,iPCwBJ,IAAMC,EAAYC,YAAWC,KAEvBC,EAAwBC,IAAW,CACvCC,MAAOD,MACJC,MAAM,uBACNC,SAAS,qBACZC,SAAUH,MACPE,SAAS,uBACTE,IAAI,EAAG,iDAiIGC,uBA9Hf,YAAkC,IAAbC,EAAY,EAAZA,SACbC,EAAUX,IADe,EAGSY,oBAAS,GAA1CC,EAHwB,KAGVC,EAHU,KAS/B,OAJIC,eACFC,mBAAS,kBAIT,yBACEC,MAAO,CACLC,gBAAgB,OAAQC,EAAQ,QAAjB,IACfC,eAAgB,QAChBC,mBAAoB,eAGtB,kBAAC,IAAD,CAAKC,MAAM,eACX,yBAAKC,UAAWZ,EAAQa,WACtB,kBAAC,IAAD,CAAeC,QAAQ,UACrB,kBAAC,IAAD,CAAUC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAC5B,kBAACC,EAAA,EAAD,CAAMC,QAAQ,YACZ,kBAAC,IAAD,CACEC,cAAe,CAAE1B,MAAO,GAAIE,SAAU,IACtCyB,iBAAkB7B,EAClB8B,SAAQ,e,EAAA,G,EAAA,UAAE,WAAOC,EAAP,sBAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,cAAjB,kBAII1B,EACP2B,OACAC,2BAA2BJ,EAAO7B,MAAO6B,EAAO3B,UAN7C,gBAGJgC,EAHI,EAGJA,KAIFC,YAAQD,GACRvB,mBAAS,kBARH,kDAUNyB,QAAQC,IAAR,MAVM,yBAYNN,GAAc,GAZR,4E,+KAAF,0DAgBP,gBACCF,EADD,EACCA,OACAS,EAFD,EAECA,OACAC,EAHD,EAGCA,QACAC,EAJD,EAICA,aACAC,EALD,EAKCA,aACAC,EAND,EAMCA,aAND,OAQC,0BAAMd,SAAUa,GACd,kBAACE,EAAA,EAAD,CAAY1B,MAAO,uCACnB,kBAAC2B,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAaC,WAAS,EAAC5B,UAAWZ,EAAQyC,aACxC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAApB,SACA,kBAACC,EAAA,EAAD,CACEC,GAAG,QACHC,SAAUZ,EACVa,MAAOxB,EAAO7B,MACdsD,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACC,EAAA,EAAD,SAIN,kBAACC,EAAA,EAAD,CACEP,GAAG,oBACHQ,MAAOpB,EAAQvC,OAAS4D,QAAQtB,EAAOtC,QAEtCuC,EAAQvC,MAAQsC,EAAOtC,MAAQ,KAGpC,kBAAC6C,EAAA,EAAD,CAAaC,WAAS,EAAC5B,UAAWZ,EAAQyC,aACxC,kBAACC,EAAA,EAAD,CAAYC,QAAQ,YAApB,YACA,kBAACC,EAAA,EAAD,CACEC,GAAG,WACHU,KAAMrD,EAAe,OAAS,WAC9B4C,SAAUZ,EACVa,MAAOxB,EAAO3B,SACdoD,eACE,kBAACC,EAAA,EAAD,CAAgBC,SAAS,SACvB,kBAACM,EAAD,OAGJC,aACE,kBAACR,EAAA,EAAD,CAAgBC,SAAS,OACvB,kBAACQ,EAAA,EAAD,CACEC,QAAS,kBAAMxD,GAAiBD,KAE/BA,EACC,kBAAC0D,EAAD,MAEA,kBAACC,EAAD,UAMV,kBAACT,EAAA,EAAD,CACEP,GAAG,uBACHQ,MAAOpB,EAAQrC,UAAY0D,QAAQtB,EAAOpC,WAEzCqC,EAAQrC,SAAWoC,EAAOpC,SAAW,MAI5C,kBAACkE,EAAA,EAAD,KACE,kBAAC,IAAD,CACEC,MAAM,SACNR,KAAK,SACLS,SAAU5B,EACVI,WAAS,GAJX","file":"component---src-pages-login-js-9b5cf5a02b6e6121502c.js","sourcesContent":["import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M18 8h-1V6c0-2.76-2.24-5-5-5S7 3.24 7 6v2H6c-1.1 0-2 .9-2 2v10c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V10c0-1.1-.9-2-2-2zm-6 9c-1.1 0-2-.9-2-2s.9-2 2-2 2 .9 2 2-.9 2-2 2zm3.1-9H8.9V6c0-1.71 1.39-3.1 3.1-3.1 1.71 0 3.1 1.39 3.1 3.1v2z\"\n}), 'Lock');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 4.5C7 4.5 2.73 7.61 1 12c1.73 4.39 6 7.5 11 7.5s9.27-3.11 11-7.5c-1.73-4.39-6-7.5-11-7.5zM12 17c-2.76 0-5-2.24-5-5s2.24-5 5-5 5 2.24 5 5-2.24 5-5 5zm0-8c-1.66 0-3 1.34-3 3s1.34 3 3 3 3-1.34 3-3-1.34-3-3-3z\"\n}), 'Visibility');","import React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon(React.createElement(\"path\", {\n  d: \"M12 7c2.76 0 5 2.24 5 5 0 .65-.13 1.26-.36 1.83l2.92 2.92c1.51-1.26 2.7-2.89 3.43-4.75-1.73-4.39-6-7.5-11-7.5-1.4 0-2.74.25-3.98.7l2.16 2.16C10.74 7.13 11.35 7 12 7zM2 4.27l2.28 2.28.46.46C3.08 8.3 1.78 10.02 1 12c1.73 4.39 6 7.5 11 7.5 1.55 0 3.03-.3 4.38-.84l.42.42L19.73 22 21 20.73 3.27 3 2 4.27zM7.53 9.8l1.55 1.55c-.05.21-.08.43-.08.65 0 1.66 1.34 3 3 3 .22 0 .44-.03.65-.08l1.55 1.55c-.67.33-1.41.53-2.2.53-2.76 0-5-2.24-5-5 0-.79.2-1.53.53-2.2zm4.31-.78l3.15 3.15.02-.16c0-1.66-1.34-3-3-3l-.17.01z\"\n}), 'VisibilityOff');","import React, { useState } from \"react\"\nimport {\n  makeStyles,\n  Card,\n  CardContent,\n  CardActions,\n  FormControl,\n  Input,\n  InputLabel,\n  InputAdornment,\n  CardHeader,\n  FormHelperText,\n  IconButton,\n} from \"@material-ui/core\"\nimport { Person, Lock, Visibility, VisibilityOff } from \"@material-ui/icons\"\nimport { Formik } from \"formik\"\nimport { navigate } from \"gatsby\"\nimport * as Yup from \"yup\"\n\nimport SEO from \"../components/seo\"\nimport GridContainer from \"../components/grid-container\"\nimport GridItem from \"../components/grid-item\"\nimport Button from \"../components/button\"\nimport { withFirebase } from \"../services/firebase\"\nimport { setUser, isLoggedIn } from \"../services/auth\"\n\nimport loginPageStyles from \"../styles/login-page\"\n\nconst useStyles = makeStyles(loginPageStyles)\n\nconst loginValidationSchema = Yup.object({\n  email: Yup.string()\n    .email(\"Enter a valid email\")\n    .required(\"Email is required\"),\n  password: Yup.string()\n    .required(\"Enter your password\")\n    .min(8, \"Password must contain at least 8 characters\"),\n})\n\nfunction LoginPage({ firebase }) {\n  const classes = useStyles()\n\n  const [showPassword, setShowPassword] = useState(false)\n\n  if (isLoggedIn()) {\n    navigate(`/app/dashboard`)\n  }\n\n  return (\n    <div\n      style={{\n        backgroundImage: `url(${require(\"../images/background.jpg\")})`,\n        backgroundSize: \"cover\",\n        backgroundPosition: \"top center\",\n      }}\n    >\n      <SEO title=\"Login page\" />\n      <div className={classes.container}>\n        <GridContainer justify=\"center\">\n          <GridItem xs={10} sm={10} md={4}>\n            <Card variant=\"outlined\">\n              <Formik\n                initialValues={{ email: \"\", password: \"\" }}\n                validationSchema={loginValidationSchema}\n                onSubmit={async (values, { setSubmitting }) => {\n                  try {\n                    const {\n                      user,\n                    } = await firebase\n                      .auth()\n                      .signInWithEmailAndPassword(values.email, values.password)\n                    setUser(user)\n                    navigate(`/app/dashboard`)\n                  } catch (error) {\n                    console.log(error)\n                  } finally {\n                    setSubmitting(false)\n                  }\n                }}\n              >\n                {({\n                  values,\n                  errors,\n                  touched,\n                  handleChange,\n                  handleSubmit,\n                  isSubmitting,\n                }) => (\n                  <form onSubmit={handleSubmit}>\n                    <CardHeader title={<h4>Login</h4>}></CardHeader>\n                    <CardContent>\n                      <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel htmlFor=\"email\">Email</InputLabel>\n                        <Input\n                          id=\"email\"\n                          onChange={handleChange}\n                          value={values.email}\n                          startAdornment={\n                            <InputAdornment position=\"start\">\n                              <Person />\n                            </InputAdornment>\n                          }\n                        />\n                        <FormHelperText\n                          id=\"email-helper-text\"\n                          error={touched.email && Boolean(errors.email)}\n                        >\n                          {touched.email ? errors.email : \"\"}\n                        </FormHelperText>\n                      </FormControl>\n                      <FormControl fullWidth className={classes.formControl}>\n                        <InputLabel htmlFor=\"password\">Password</InputLabel>\n                        <Input\n                          id=\"password\"\n                          type={showPassword ? \"text\" : \"password\"}\n                          onChange={handleChange}\n                          value={values.password}\n                          startAdornment={\n                            <InputAdornment position=\"start\">\n                              <Lock />\n                            </InputAdornment>\n                          }\n                          endAdornment={\n                            <InputAdornment position=\"end\">\n                              <IconButton\n                                onClick={() => setShowPassword(!showPassword)}\n                              >\n                                {showPassword ? (\n                                  <Visibility />\n                                ) : (\n                                  <VisibilityOff />\n                                )}\n                              </IconButton>\n                            </InputAdornment>\n                          }\n                        />\n                        <FormHelperText\n                          id=\"password-helper-text\"\n                          error={touched.password && Boolean(errors.password)}\n                        >\n                          {touched.password ? errors.password : \"\"}\n                        </FormHelperText>\n                      </FormControl>\n                    </CardContent>\n                    <CardActions>\n                      <Button\n                        color=\"danger\"\n                        type=\"submit\"\n                        disabled={isSubmitting}\n                        fullWidth\n                      >\n                        Login\n                      </Button>\n                    </CardActions>\n                  </form>\n                )}\n              </Formik>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </div>\n    </div>\n  )\n}\n\nexport default withFirebase(LoginPage)\n"],"sourceRoot":""}