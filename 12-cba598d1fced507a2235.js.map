{"version":3,"sources":["webpack:///./node_modules/@firebase/performance/dist/index.cjs.js","webpack:///./node_modules/firebase/performance/dist/index.esm.js"],"names":["Object","defineProperty","exports","value","ex","firebase","_a","apiInstance","windowInstance","settingsServiceInstance","tslib","util","logger$1","component","ERROR_DESCRIPTION_MAP","ERROR_FACTORY","ErrorFactory","Api","window","this","create","performance","PerformanceObserver","windowLocation","location","navigator","document","cookieEnabled","localStorage","perfMetrics","onFirstInputDelay","prototype","getUrl","href","split","mark","name","measure","measureName","mark1","mark2","getEntriesByType","type","getEntriesByName","getTimeOrigin","timeOrigin","timing","navigationStart","requiredApisAvailable","fetch","Promise","setupObserver","entryType","callback","list","_i","getEntries","length","entry","observe","entryTypes","getInstance","undefined","iid","VisibilityState","SettingsService","instrumentationEnabled","dataCollectionEnabled","loggingEnabled","tracesSamplingRate","networkRequestsSamplingRate","logEndPointUrl","logSource","logTraceAfterSampling","logNetworkAfterSampling","configTimeToLive","getAppId","appId","firebaseAppInstance","options","getProjectId","projectId","getApiKey","apiKey","getIid","RESERVED_ATTRIBUTE_PREFIXES","ATTRIBUTE_FORMAT_REGEX","RegExp","getVisibilityState","visibilityState","VISIBLE","HIDDEN","UNKNOWN","getEffectiveConnectionType","navigatorConnection","connection","effectiveType","consoleLogger","Logger","logLevel","LogLevel","INFO","SECONDARY_CONFIGS","getConfig","config","expiryString","getItem","expiry","Number","Date","now","configStringified","JSON","parse","getStoredConfig","processConfig","resolve","authTokenPromise","installationsService","getToken","then","authTokenVal","authToken","configEndPoint","request","Request","method","headers","Authorization","FIS_AUTH_PREFIX","body","stringify","app_instance_id","app_instance_id_token","app_id","app_version","sdk_version","response","ok","json","info","getRemoteConfig","setItem","String","storeConfig","entries","fpr_enabled","fpr_log_source","fpr_log_endpoint_url","fpr_vc_network_request_sampling_rate","fpr_vc_trace_sampling_rate","shouldLogAfterSampling","samplingRate","Math","random","initializationPromise","initializationStatus","getInitializationPromise","readyState","addEventListener","handler_1","removeEventListener","iidPromise","getId","iidVal","changeInitializationStatus","logger","remainingTries","queue","isTransportSetup","setupTransportService","processQueue","timeOffset","setTimeout","staged","__spreadArrays","log_event","map","evt","source_extension_json_proto3","message","event_time_ms","eventTime","data","request_time_ms","client_info","client_type","js_client_info","log_source","res","wait","next_request_wait_millis","requestOffset","isNaN","max","addToQueue","sendLog","resource","resourceType","serializer","args","arguments","apply","transportHandler","logTrace","trace","settingsService","isAuto","sendTraceLog","networkRequestMetric","url","networkRequest","http_method","httpMethod","http_response_code","response_payload_bytes","responsePayloadBytes","client_start_time_us","startTimeUs","time_to_response_initiated_us","timeToResponseInitiatedUs","time_to_response_completed_us","timeToResponseCompletedUs","perfMetric","application_info","getApplicationInfo","network_request_metric","traceMetric","is_auto","duration_us","durationUs","keys","counters","customAttributes","getAttributes","custom_attributes","trace_metric","serializeTrace","google_app_id","web_app_info","page_url","service_worker_status","serviceWorker","controller","visibility_state","effective_connection_type","application_process_state","oobMetrics","Trace","traceMeasureName","state","api","randomId","floor","traceStartMark","TRACE_START_MARK_PREFIX","traceStopMark","TRACE_STOP_MARK_PREFIX","traceMeasure","TRACE_MEASURE_PREFIX","calculateTraceMetrics","start","traceName","stop","record","startTime","duration","attributes","__assign","metrics","metric","incrementMetric","counter","num","putMetric","startsWith","indexOf","isValidMetricName","customMetricName","getMetric","putAttribute","attr","isValidName","some","prefix","match","isValidCustomAttributeName","isValidValue","isValidCustomAttributeValue","attributeName","attributeValue","getAttribute","removeAttribute","setStartTime","setDuration","perfMeasureEntries","perfMeasureEntry","createOobTrace","navigationTimings","paintTimings","firstInputDelay","route","timeOriginUs","domInteractive","domContentLoadedEventEnd","loadEventEnd","firstPaint","find","paintObject","firstContentfulPaint","createUserTimingTrace","createNetworkRequestEntry","performanceEntry","responseStart","responseEnd","logNetworkRequest","transferSize","setupOobResources","timeoutId_1","fid","clearTimeout","setupOobTraces","resources","resources_1","setupNetworkRequests","measures","measures_1","setupUserTimingTraces","substring","PerformanceController","app","get","set","val","enumerable","configurable","registerPerformance","instance","factoryMethod","installations","setupApi","INTERNAL","registerComponent","Component","container","getProvider","getImmediate","registerVersion"],"mappings":"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","file":"12-cba598d1fced507a2235.js","sourcesContent":["'use strict';\n\nrequire(\"core-js/modules/es6.array.find\");\n\nrequire(\"core-js/modules/es6.array.index-of\");\n\nrequire(\"core-js/modules/es6.object.keys\");\n\nrequire(\"core-js/modules/es6.function.name\");\n\nrequire(\"core-js/modules/es6.array.map\");\n\nrequire(\"core-js/modules/es6.number.constructor\");\n\nrequire(\"core-js/modules/web.dom.iterable\");\n\nrequire(\"core-js/modules/es6.array.iterator\");\n\nrequire(\"core-js/modules/es6.date.now\");\n\nrequire(\"core-js/modules/es6.regexp.match\");\n\nrequire(\"core-js/modules/es6.string.starts-with\");\n\nrequire(\"core-js/modules/es6.array.some\");\n\nrequire(\"core-js/modules/es6.regexp.constructor\");\n\nrequire(\"core-js/modules/es6.promise\");\n\nrequire(\"core-js/modules/es6.object.to-string\");\n\nrequire(\"core-js/modules/es6.regexp.split\");\n\nrequire(\"core-js/modules/es6.object.define-property\");\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopDefault(ex) {\n  return ex && typeof ex === 'object' && 'default' in ex ? ex['default'] : ex;\n}\n\nvar firebase = _interopDefault(require('@firebase/app'));\n\nrequire('@firebase/installations');\n\nvar tslib = require('tslib');\n\nvar util = require('@firebase/util');\n\nvar logger$1 = require('@firebase/logger');\n\nvar component = require('@firebase/component');\n\nvar name = \"@firebase/performance\";\nvar version = \"0.2.32\";\n/**\r\n * @license\r\n * Copyright 2017 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar SDK_VERSION = version;\n/** The prefix for start User Timing marks used for creating Traces. */\n\nvar TRACE_START_MARK_PREFIX = 'FB-PERF-TRACE-START';\n/** The prefix for stop User Timing marks used for creating Traces. */\n\nvar TRACE_STOP_MARK_PREFIX = 'FB-PERF-TRACE-STOP';\n/** The prefix for User Timing measure used for creating Traces. */\n\nvar TRACE_MEASURE_PREFIX = 'FB-PERF-TRACE-MEASURE';\n/** The prefix for out of the box page load Trace name. */\n\nvar OOB_TRACE_PAGE_LOAD_PREFIX = '_wt_';\nvar FIRST_PAINT_COUNTER_NAME = '_fp';\nvar FIRST_CONTENTFUL_PAINT_COUNTER_NAME = '_fcp';\nvar FIRST_INPUT_DELAY_COUNTER_NAME = '_fid';\nvar CONFIG_LOCAL_STORAGE_KEY = '@firebase/performance/config';\nvar CONFIG_EXPIRY_LOCAL_STORAGE_KEY = '@firebase/performance/configexpire';\nvar SERVICE = 'performance';\nvar SERVICE_NAME = 'Performance';\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar _a;\n\nvar ERROR_DESCRIPTION_MAP = (_a = {}, _a[\"trace started\"\n/* TRACE_STARTED_BEFORE */\n] = 'Trace {$traceName} was started before.', _a[\"trace stopped\"\n/* TRACE_STOPPED_BEFORE */\n] = 'Trace {$traceName} is not running.', _a[\"no window\"\n/* NO_WINDOW */\n] = 'Window is not available.', _a[\"no app id\"\n/* NO_APP_ID */\n] = 'App id is not available.', _a[\"no project id\"\n/* NO_PROJECT_ID */\n] = 'Project id is not available.', _a[\"no api key\"\n/* NO_API_KEY */\n] = 'Api key is not available.', _a[\"invalid cc log\"\n/* INVALID_CC_LOG */\n] = 'Attempted to queue invalid cc event', _a[\"FB not default\"\n/* FB_NOT_DEFAULT */\n] = 'Performance can only start when Firebase app instance is the default one.', _a[\"RC response not ok\"\n/* RC_NOT_OK */\n] = 'RC response is not ok', _a[\"invalid attribute name\"\n/* INVALID_ATTRIBUTE_NAME */\n] = 'Attribute name {$attributeName} is invalid.', _a[\"invalid attribute value\"\n/* INVALID_ATTRIBUTE_VALUE */\n] = 'Attribute value {$attributeValue} is invalid.', _a[\"invalide custom metric name\"\n/* INVALID_CUSTOM_METRIC_NAME */\n] = 'Custom metric name {$customMetricName} is invalid', _a);\nvar ERROR_FACTORY = new util.ErrorFactory(SERVICE, SERVICE_NAME, ERROR_DESCRIPTION_MAP);\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar apiInstance;\nvar windowInstance;\n/**\r\n * This class holds a reference to various browser related objects injected by\r\n * set methods.\r\n */\n\nvar Api =\n/** @class */\nfunction () {\n  function Api(window) {\n    this.window = window;\n\n    if (!window) {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    this.performance = window.performance;\n    this.PerformanceObserver = window.PerformanceObserver;\n    this.windowLocation = window.location;\n    this.navigator = window.navigator;\n    this.document = window.document;\n\n    if (this.navigator && this.navigator.cookieEnabled) {\n      // If user blocks cookies on the browser, accessing localStorage will\n      // throw an exception.\n      this.localStorage = window.localStorage;\n    }\n\n    if (window.perfMetrics && window.perfMetrics.onFirstInputDelay) {\n      this.onFirstInputDelay = window.perfMetrics.onFirstInputDelay;\n    }\n  }\n\n  Api.prototype.getUrl = function () {\n    // Do not capture the string query part of url.\n    return this.windowLocation.href.split('?')[0];\n  };\n\n  Api.prototype.mark = function (name) {\n    if (!this.performance || !this.performance.mark) {\n      return;\n    }\n\n    this.performance.mark(name);\n  };\n\n  Api.prototype.measure = function (measureName, mark1, mark2) {\n    if (!this.performance || !this.performance.measure) {\n      return;\n    }\n\n    this.performance.measure(measureName, mark1, mark2);\n  };\n\n  Api.prototype.getEntriesByType = function (type) {\n    if (!this.performance || !this.performance.getEntriesByType) {\n      return [];\n    }\n\n    return this.performance.getEntriesByType(type);\n  };\n\n  Api.prototype.getEntriesByName = function (name) {\n    if (!this.performance || !this.performance.getEntriesByName) {\n      return [];\n    }\n\n    return this.performance.getEntriesByName(name);\n  };\n\n  Api.prototype.getTimeOrigin = function () {\n    // Polyfill the time origin with performance.timing.navigationStart.\n    return this.performance && (this.performance.timeOrigin || this.performance.timing.navigationStart);\n  };\n\n  Api.prototype.requiredApisAvailable = function () {\n    if (fetch && Promise && this.navigator && this.navigator.cookieEnabled) {\n      return true;\n    }\n\n    return false;\n  };\n\n  Api.prototype.setupObserver = function (entryType, callback) {\n    if (!this.PerformanceObserver) {\n      return;\n    }\n\n    var observer = new this.PerformanceObserver(function (list) {\n      for (var _i = 0, _a = list.getEntries(); _i < _a.length; _i++) {\n        var entry = _a[_i]; // `entry` is a PerformanceEntry instance.\n\n        callback(entry);\n      }\n    }); // Start observing the entry types you care about.\n\n    observer.observe({\n      entryTypes: [entryType]\n    });\n  };\n\n  Api.getInstance = function () {\n    if (apiInstance === undefined) {\n      apiInstance = new Api(windowInstance);\n    }\n\n    return apiInstance;\n  };\n\n  return Api;\n}();\n\nfunction setupApi(window) {\n  windowInstance = window;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar settingsServiceInstance;\n\nvar SettingsService =\n/** @class */\nfunction () {\n  function SettingsService() {\n    // The variable which controls logging of automatic traces and HTTP/S network monitoring.\n    this.instrumentationEnabled = true; // The variable which controls logging of custom traces.\n\n    this.dataCollectionEnabled = true; // Configuration flags set through remote config.\n\n    this.loggingEnabled = false; // Sampling rate between 0 and 1.\n\n    this.tracesSamplingRate = 1;\n    this.networkRequestsSamplingRate = 1; // Address of logging service.\n\n    this.logEndPointUrl = 'https://firebaselogging.googleapis.com/v0cc/log?format=json_proto';\n    this.logSource = 462; // Flags which control per session logging of traces and network requests.\n\n    this.logTraceAfterSampling = false;\n    this.logNetworkAfterSampling = false; // TTL of config retrieved from remote config in hours.\n\n    this.configTimeToLive = 12;\n  }\n\n  SettingsService.prototype.getAppId = function () {\n    var appId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.appId;\n\n    if (!appId) {\n      throw ERROR_FACTORY.create(\"no app id\"\n      /* NO_APP_ID */\n      );\n    }\n\n    return appId;\n  };\n\n  SettingsService.prototype.getProjectId = function () {\n    var projectId = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.projectId;\n\n    if (!projectId) {\n      throw ERROR_FACTORY.create(\"no project id\"\n      /* NO_PROJECT_ID */\n      );\n    }\n\n    return projectId;\n  };\n\n  SettingsService.prototype.getApiKey = function () {\n    var apiKey = this.firebaseAppInstance && this.firebaseAppInstance.options && this.firebaseAppInstance.options.apiKey;\n\n    if (!apiKey) {\n      throw ERROR_FACTORY.create(\"no api key\"\n      /* NO_API_KEY */\n      );\n    }\n\n    return apiKey;\n  };\n\n  SettingsService.getInstance = function () {\n    if (settingsServiceInstance === undefined) {\n      settingsServiceInstance = new SettingsService();\n    }\n\n    return settingsServiceInstance;\n  };\n\n  return SettingsService;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar iid;\n\nfunction getIidPromise() {\n  var iidPromise = SettingsService.getInstance().installationsService.getId(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  iidPromise.then(function (iidVal) {\n    iid = iidVal;\n  });\n  return iidPromise;\n} // This method should be used after the iid is retrieved by getIidPromise method.\n\n\nfunction getIid() {\n  return iid;\n}\n\nfunction getAuthTokenPromise() {\n  var authTokenPromise = SettingsService.getInstance().installationsService.getToken(); // eslint-disable-next-line @typescript-eslint/no-floating-promises\n\n  authTokenPromise.then(function (authTokenVal) {});\n  return authTokenPromise;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar VisibilityState;\n\n(function (VisibilityState) {\n  VisibilityState[VisibilityState[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\n  VisibilityState[VisibilityState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  VisibilityState[VisibilityState[\"HIDDEN\"] = 2] = \"HIDDEN\";\n})(VisibilityState || (VisibilityState = {}));\n\nvar RESERVED_ATTRIBUTE_PREFIXES = ['firebase_', 'google_', 'ga_'];\nvar ATTRIBUTE_FORMAT_REGEX = new RegExp('^[a-zA-Z]\\\\w*$');\nvar MAX_ATTRIBUTE_NAME_LENGTH = 40;\nvar MAX_ATTRIBUTE_VALUE_LENGTH = 100;\n\nfunction getServiceWorkerStatus() {\n  var navigator = Api.getInstance().navigator;\n\n  if ('serviceWorker' in navigator) {\n    if (navigator.serviceWorker.controller) {\n      return 2\n      /* CONTROLLED */\n      ;\n    } else {\n        return 3\n        /* UNCONTROLLED */\n        ;\n      }\n  } else {\n      return 1\n      /* UNSUPPORTED */\n      ;\n    }\n}\n\nfunction getVisibilityState() {\n  var document = Api.getInstance().document;\n  var visibilityState = document.visibilityState;\n\n  switch (visibilityState) {\n    case 'visible':\n      return VisibilityState.VISIBLE;\n\n    case 'hidden':\n      return VisibilityState.HIDDEN;\n\n    default:\n      return VisibilityState.UNKNOWN;\n  }\n}\n\nfunction getEffectiveConnectionType() {\n  var navigator = Api.getInstance().navigator;\n  var navigatorConnection = navigator.connection;\n  var effectiveType = navigatorConnection && navigatorConnection.effectiveType;\n\n  switch (effectiveType) {\n    case 'slow-2g':\n      return 1\n      /* CONNECTION_SLOW_2G */\n      ;\n\n    case '2g':\n      return 2\n      /* CONNECTION_2G */\n      ;\n\n    case '3g':\n      return 3\n      /* CONNECTION_3G */\n      ;\n\n    case '4g':\n      return 4\n      /* CONNECTION_4G */\n      ;\n\n    default:\n      return 0\n      /* UNKNOWN */\n      ;\n  }\n}\n\nfunction isValidCustomAttributeName(name) {\n  if (name.length === 0 || name.length > MAX_ATTRIBUTE_NAME_LENGTH) {\n    return false;\n  }\n\n  var matchesReservedPrefix = RESERVED_ATTRIBUTE_PREFIXES.some(function (prefix) {\n    return name.startsWith(prefix);\n  });\n  return !matchesReservedPrefix && !!name.match(ATTRIBUTE_FORMAT_REGEX);\n}\n\nfunction isValidCustomAttributeValue(value) {\n  return value.length !== 0 && value.length <= MAX_ATTRIBUTE_VALUE_LENGTH;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar consoleLogger = new logger$1.Logger(SERVICE_NAME);\nconsoleLogger.logLevel = logger$1.LogLevel.INFO;\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nvar REMOTE_CONFIG_SDK_VERSION = '0.0.1'; // These values will be used if the remote config object is successfully\n// retrieved, but the template does not have these fields.\n\nvar SECONDARY_CONFIGS = {\n  loggingEnabled: true\n};\nvar FIS_AUTH_PREFIX = 'FIREBASE_INSTALLATIONS_AUTH';\n\nfunction getConfig(iid) {\n  var config = getStoredConfig();\n\n  if (config) {\n    processConfig(config);\n    return Promise.resolve();\n  }\n\n  return getRemoteConfig(iid).then(function (config) {\n    return processConfig(config);\n  }).then(function (config) {\n    return storeConfig(config);\n  },\n  /** Do nothing for error, use defaults set in settings service. */\n  function () {});\n}\n\nfunction getStoredConfig() {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!localStorage) {\n    return;\n  }\n\n  var expiryString = localStorage.getItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY);\n\n  if (!expiryString || !configValid(expiryString)) {\n    return;\n  }\n\n  var configStringified = localStorage.getItem(CONFIG_LOCAL_STORAGE_KEY);\n\n  if (!configStringified) {\n    return;\n  }\n\n  try {\n    var configResponse = JSON.parse(configStringified);\n    return configResponse;\n  } catch (_a) {\n    return;\n  }\n}\n\nfunction storeConfig(config) {\n  var localStorage = Api.getInstance().localStorage;\n\n  if (!config || !localStorage) {\n    return;\n  }\n\n  localStorage.setItem(CONFIG_LOCAL_STORAGE_KEY, JSON.stringify(config));\n  localStorage.setItem(CONFIG_EXPIRY_LOCAL_STORAGE_KEY, String(Date.now() + SettingsService.getInstance().configTimeToLive * 60 * 60 * 1000));\n}\n\nvar COULD_NOT_GET_CONFIG_MSG = 'Could not fetch config, will use default configs';\n\nfunction getRemoteConfig(iid) {\n  // Perf needs auth token only to retrieve remote config.\n  return getAuthTokenPromise().then(function (authToken) {\n    var projectId = SettingsService.getInstance().getProjectId();\n    var configEndPoint = \"https://firebaseremoteconfig.googleapis.com/v1/projects/\" + projectId + \"/namespaces/fireperf:fetch?key=\" + SettingsService.getInstance().getApiKey();\n    var request = new Request(configEndPoint, {\n      method: 'POST',\n      headers: {\n        Authorization: FIS_AUTH_PREFIX + \" \" + authToken\n      },\n\n      /* eslint-disable camelcase */\n      body: JSON.stringify({\n        app_instance_id: iid,\n        app_instance_id_token: authToken,\n        app_id: SettingsService.getInstance().getAppId(),\n        app_version: SDK_VERSION,\n        sdk_version: REMOTE_CONFIG_SDK_VERSION\n      })\n      /* eslint-enable camelcase */\n\n    });\n    return fetch(request).then(function (response) {\n      if (response.ok) {\n        return response.json();\n      } // In case response is not ok. This will be caught by catch.\n\n\n      throw ERROR_FACTORY.create(\"RC response not ok\"\n      /* RC_NOT_OK */\n      );\n    });\n  })[\"catch\"](function () {\n    consoleLogger.info(COULD_NOT_GET_CONFIG_MSG);\n    return undefined;\n  });\n}\n/**\r\n * Processes config coming either from calling RC or from local storage.\r\n * This method only runs if call is successful or config in storage\r\n * is valie.\r\n */\n\n\nfunction processConfig(config) {\n  if (!config) {\n    return config;\n  }\n\n  var settingsServiceInstance = SettingsService.getInstance();\n  var entries = config.entries || {};\n\n  if (entries.fpr_enabled !== undefined) {\n    // TODO: Change the assignment of loggingEnabled once the received type is\n    // known.\n    settingsServiceInstance.loggingEnabled = String(entries.fpr_enabled) === 'true';\n  } else {\n    // Config retrieved successfully, but there is no fpr_enabled in template.\n    // Use secondary configs value.\n    settingsServiceInstance.loggingEnabled = SECONDARY_CONFIGS.loggingEnabled;\n  }\n\n  if (entries.fpr_log_source) {\n    settingsServiceInstance.logSource = Number(entries.fpr_log_source);\n  }\n\n  if (entries.fpr_log_endpoint_url) {\n    settingsServiceInstance.logEndPointUrl = entries.fpr_log_endpoint_url;\n  }\n\n  if (entries.fpr_vc_network_request_sampling_rate !== undefined) {\n    settingsServiceInstance.networkRequestsSamplingRate = Number(entries.fpr_vc_network_request_sampling_rate);\n  }\n\n  if (entries.fpr_vc_trace_sampling_rate !== undefined) {\n    settingsServiceInstance.tracesSamplingRate = Number(entries.fpr_vc_trace_sampling_rate);\n  } // Set the per session trace and network logging flags.\n\n\n  settingsServiceInstance.logTraceAfterSampling = shouldLogAfterSampling(settingsServiceInstance.tracesSamplingRate);\n  settingsServiceInstance.logNetworkAfterSampling = shouldLogAfterSampling(settingsServiceInstance.networkRequestsSamplingRate);\n  return config;\n}\n\nfunction configValid(expiry) {\n  return Number(expiry) > Date.now();\n}\n\nfunction shouldLogAfterSampling(samplingRate) {\n  return Math.random() <= samplingRate;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar initializationStatus = 1\n/* notInitialized */\n;\nvar initializationPromise;\n\nfunction getInitializationPromise() {\n  initializationStatus = 2\n  /* initializationPending */\n  ;\n  initializationPromise = initializationPromise || initializePerf();\n  return initializationPromise;\n}\n\nfunction isPerfInitialized() {\n  return initializationStatus === 3\n  /* initialized */\n  ;\n}\n\nfunction initializePerf() {\n  return getDocumentReadyComplete().then(function () {\n    return getIidPromise();\n  }).then(function (iid) {\n    return getConfig(iid);\n  }).then(function () {\n    return changeInitializationStatus();\n  }, function () {\n    return changeInitializationStatus();\n  });\n}\n/**\r\n * Returns a promise which resolves whenever the document readystate is complete or\r\n * immediately if it is called after page load complete.\r\n */\n\n\nfunction getDocumentReadyComplete() {\n  var document = Api.getInstance().document;\n  return new Promise(function (resolve) {\n    if (document && document.readyState !== 'complete') {\n      var handler_1 = function handler_1() {\n        if (document.readyState === 'complete') {\n          document.removeEventListener('readystatechange', handler_1);\n          resolve();\n        }\n      };\n\n      document.addEventListener('readystatechange', handler_1);\n    } else {\n      resolve();\n    }\n  });\n}\n\nfunction changeInitializationStatus() {\n  initializationStatus = 3\n  /* initialized */\n  ;\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_SEND_INTERVAL_MS = 10 * 1000;\nvar INITIAL_SEND_TIME_DELAY_MS = 5.5 * 1000; // If end point does not work, the call will be tried for these many times.\n\nvar DEFAULT_REMAINING_TRIES = 3;\nvar remainingTries = DEFAULT_REMAINING_TRIES;\n/* eslint-enable camelcase */\n\nvar queue = [];\nvar isTransportSetup = false;\n\nfunction setupTransportService() {\n  if (!isTransportSetup) {\n    processQueue(INITIAL_SEND_TIME_DELAY_MS);\n    isTransportSetup = true;\n  }\n}\n\nfunction processQueue(timeOffset) {\n  setTimeout(function () {\n    // If there is no remainingTries left, stop retrying.\n    if (remainingTries === 0) {\n      return;\n    } // If there are no events to process, wait for DEFAULT_SEND_INTERVAL_MS and try again.\n\n\n    if (!queue.length) {\n      return processQueue(DEFAULT_SEND_INTERVAL_MS);\n    } // Capture a snapshot of the queue and empty the \"official queue\".\n\n\n    var staged = tslib.__spreadArrays(queue);\n\n    queue = [];\n    /* eslint-disable camelcase */\n    // We will pass the JSON serialized event to the backend.\n\n    var log_event = staged.map(function (evt) {\n      return {\n        source_extension_json_proto3: evt.message,\n        event_time_ms: String(evt.eventTime)\n      };\n    });\n    var data = {\n      request_time_ms: String(Date.now()),\n      client_info: {\n        client_type: 1,\n        js_client_info: {}\n      },\n      log_source: SettingsService.getInstance().logSource,\n      log_event: log_event\n    };\n    /* eslint-enable camelcase */\n\n    fetch(SettingsService.getInstance().logEndPointUrl, {\n      method: 'POST',\n      body: JSON.stringify(data)\n    }).then(function (res) {\n      if (!res.ok) {\n        consoleLogger.info('Call to Firebase backend failed.');\n      }\n\n      return res.json();\n    }).then(function (res) {\n      var wait = Number(res.next_request_wait_millis); // Find the next call wait time from the response.\n\n      var requestOffset = isNaN(wait) ? DEFAULT_SEND_INTERVAL_MS : Math.max(DEFAULT_SEND_INTERVAL_MS, wait);\n      remainingTries = DEFAULT_REMAINING_TRIES; // Schedule the next process.\n\n      processQueue(requestOffset);\n    })[\"catch\"](function () {\n      /**\r\n       * If the request fails for some reason, add the events that were attempted\r\n       * back to the primary queue to retry later.\r\n       */\n      queue = tslib.__spreadArrays(staged, queue);\n      remainingTries--;\n      consoleLogger.info(\"Tries left: \" + remainingTries + \".\");\n      processQueue(DEFAULT_SEND_INTERVAL_MS);\n    });\n  }, timeOffset);\n}\n\nfunction addToQueue(evt) {\n  if (!evt.eventTime || !evt.message) {\n    throw ERROR_FACTORY.create(\"invalid cc log\"\n    /* INVALID_CC_LOG */\n    );\n  } // Add the new event to the queue.\n\n\n  queue = tslib.__spreadArrays(queue, [evt]);\n}\n/** Log handler for cc service to send the performance logs to the server. */\n\n\nfunction transportHandler( // eslint-disable-next-line @typescript-eslint/no-explicit-any\nserializer) {\n  return function () {\n    var args = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      args[_i] = arguments[_i];\n    }\n\n    var message = serializer.apply(void 0, args);\n    addToQueue({\n      message: message,\n      eventTime: Date.now()\n    });\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/* eslint-enble camelcase */\n\n\nvar logger; // This method is not called before initialization.\n\nfunction sendLog(resource, resourceType) {\n  if (!logger) {\n    logger = transportHandler(serializer);\n  }\n\n  logger(resource, resourceType);\n}\n\nfunction logTrace(trace) {\n  var settingsService = SettingsService.getInstance(); // Do not log if trace is auto generated and instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled && trace.isAuto) {\n    return;\n  } // Do not log if trace is custom and data collection is disabled.\n\n\n  if (!settingsService.dataCollectionEnabled && !trace.isAuto) {\n    return;\n  } // Do not log if required apis are not available.\n\n\n  if (!Api.getInstance().requiredApisAvailable()) {\n    return;\n  } // Only log the page load auto traces if page is visible.\n\n\n  if (trace.isAuto && getVisibilityState() !== VisibilityState.VISIBLE) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logTraceAfterSampling) {\n    return;\n  }\n\n  if (isPerfInitialized()) {\n    sendTraceLog(trace);\n  } else {\n    // Custom traces can be used before the initialization but logging\n    // should wait until after.\n    getInitializationPromise().then(function () {\n      return sendTraceLog(trace);\n    }, function () {\n      return sendTraceLog(trace);\n    });\n  }\n}\n\nfunction sendTraceLog(trace) {\n  if (getIid()) {\n    setTimeout(function () {\n      return sendLog(trace, 1\n      /* Trace */\n      );\n    }, 0);\n  }\n}\n\nfunction logNetworkRequest(networkRequest) {\n  var settingsService = SettingsService.getInstance(); // Do not log network requests if instrumentation is disabled.\n\n  if (!settingsService.instrumentationEnabled) {\n    return;\n  } // Do not log the js sdk's call to cc service to avoid unnecessary cycle.\n\n\n  if (networkRequest.url === settingsService.logEndPointUrl.split('?')[0]) {\n    return;\n  }\n\n  if (!settingsService.loggingEnabled || !settingsService.logNetworkAfterSampling) {\n    return;\n  }\n\n  setTimeout(function () {\n    return sendLog(networkRequest, 0\n    /* NetworkRequest */\n    );\n  }, 0);\n}\n\nfunction serializer(resource, resourceType) {\n  if (resourceType === 0\n  /* NetworkRequest */\n  ) {\n      return serializeNetworkRequest(resource);\n    }\n\n  return serializeTrace(resource);\n}\n\nfunction serializeNetworkRequest(networkRequest) {\n  var networkRequestMetric = {\n    url: networkRequest.url,\n    http_method: networkRequest.httpMethod || 0,\n    http_response_code: 200,\n    response_payload_bytes: networkRequest.responsePayloadBytes,\n    client_start_time_us: networkRequest.startTimeUs,\n    time_to_response_initiated_us: networkRequest.timeToResponseInitiatedUs,\n    time_to_response_completed_us: networkRequest.timeToResponseCompletedUs\n  };\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    network_request_metric: networkRequestMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction serializeTrace(trace) {\n  var traceMetric = {\n    name: trace.name,\n    is_auto: trace.isAuto,\n    client_start_time_us: trace.startTimeUs,\n    duration_us: trace.durationUs\n  };\n\n  if (Object.keys(trace.counters).length !== 0) {\n    traceMetric.counters = trace.counters;\n  }\n\n  var customAttributes = trace.getAttributes();\n\n  if (Object.keys(customAttributes).length !== 0) {\n    traceMetric.custom_attributes = customAttributes;\n  }\n\n  var perfMetric = {\n    application_info: getApplicationInfo(),\n    trace_metric: traceMetric\n  };\n  return JSON.stringify(perfMetric);\n}\n\nfunction getApplicationInfo() {\n  return {\n    google_app_id: SettingsService.getInstance().getAppId(),\n    app_instance_id: getIid(),\n    web_app_info: {\n      sdk_version: SDK_VERSION,\n      page_url: Api.getInstance().getUrl(),\n      service_worker_status: getServiceWorkerStatus(),\n      visibility_state: getVisibilityState(),\n      effective_connection_type: getEffectiveConnectionType()\n    },\n    application_process_state: 0\n  };\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar MAX_METRIC_NAME_LENGTH = 100;\nvar RESERVED_AUTO_PREFIX = '_';\nvar oobMetrics = [FIRST_PAINT_COUNTER_NAME, FIRST_CONTENTFUL_PAINT_COUNTER_NAME, FIRST_INPUT_DELAY_COUNTER_NAME];\n/**\r\n * Returns true if the metric is custom and does not start with reserved prefix, or if\r\n * the metric is one of out of the box page load trace metrics.\r\n */\n\nfunction isValidMetricName(name, traceName) {\n  if (name.length === 0 || name.length > MAX_METRIC_NAME_LENGTH) {\n    return false;\n  }\n\n  return traceName && traceName.startsWith(OOB_TRACE_PAGE_LOAD_PREFIX) && oobMetrics.indexOf(name) > -1 || !name.startsWith(RESERVED_AUTO_PREFIX);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar Trace =\n/** @class */\nfunction () {\n  /**\r\n   * @param name The name of the trace.\r\n   * @param isAuto If the trace is auto-instrumented.\r\n   * @param traceMeasureName The name of the measure marker in user timing specification. This field\r\n   * is only set when the trace is built for logging when the user directly uses the user timing\r\n   * api (performance.mark and performance.measure).\r\n   */\n  function Trace(name, isAuto, traceMeasureName) {\n    if (isAuto === void 0) {\n      isAuto = false;\n    }\n\n    this.name = name;\n    this.isAuto = isAuto;\n    this.state = 1\n    /* UNINITIALIZED */\n    ;\n    this.customAttributes = {};\n    this.counters = {};\n    this.api = Api.getInstance();\n    this.randomId = Math.floor(Math.random() * 1000000);\n\n    if (!this.isAuto) {\n      this.traceStartMark = TRACE_START_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceStopMark = TRACE_STOP_MARK_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n      this.traceMeasure = traceMeasureName || TRACE_MEASURE_PREFIX + \"-\" + this.randomId + \"-\" + this.name;\n\n      if (traceMeasureName) {\n        // For the case of direct user timing traces, no start stop will happen. The measure object\n        // is already available.\n        this.calculateTraceMetrics();\n      }\n    }\n  }\n  /**\r\n   * Starts a trace. The measurement of the duration starts at this point.\r\n   */\n\n\n  Trace.prototype.start = function () {\n    if (this.state !== 1\n    /* UNINITIALIZED */\n    ) {\n        throw ERROR_FACTORY.create(\"trace started\"\n        /* TRACE_STARTED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.api.mark(this.traceStartMark);\n    this.state = 2\n    /* RUNNING */\n    ;\n  };\n  /**\r\n   * Stops the trace. The measurement of the duration of the trace stops at this point and trace\r\n   * is logged.\r\n   */\n\n\n  Trace.prototype.stop = function () {\n    if (this.state !== 2\n    /* RUNNING */\n    ) {\n        throw ERROR_FACTORY.create(\"trace stopped\"\n        /* TRACE_STOPPED_BEFORE */\n        , {\n          traceName: this.name\n        });\n      }\n\n    this.state = 3\n    /* TERMINATED */\n    ;\n    this.api.mark(this.traceStopMark);\n    this.api.measure(this.traceMeasure, this.traceStartMark, this.traceStopMark);\n    this.calculateTraceMetrics();\n    logTrace(this);\n  };\n  /**\r\n   * Records a trace with predetermined values. If this method is used a trace is created and logged\r\n   * directly. No need to use start and stop methods.\r\n   * @param startTime Trace start time since epoch in millisec\r\n   * @param duration The duraction of the trace in millisec\r\n   * @param options An object which can optionally hold maps of custom metrics and custom attributes\r\n   */\n\n\n  Trace.prototype.record = function (startTime, duration, options) {\n    this.durationUs = Math.floor(duration * 1000);\n    this.startTimeUs = Math.floor(startTime * 1000);\n\n    if (options && options.attributes) {\n      this.customAttributes = tslib.__assign({}, options.attributes);\n    }\n\n    if (options && options.metrics) {\n      for (var _i = 0, _a = Object.keys(options.metrics); _i < _a.length; _i++) {\n        var metric = _a[_i];\n\n        if (!isNaN(Number(options.metrics[metric]))) {\n          this.counters[metric] = Number(Math.floor(options.metrics[metric]));\n        }\n      }\n    }\n\n    logTrace(this);\n  };\n  /**\r\n   * Increments a custom metric by a certain number or 1 if number not specified. Will create a new\r\n   * custom metric if one with the given name does not exist.\r\n   * @param counter Name of the custom metric\r\n   * @param num Increment by value\r\n   */\n\n\n  Trace.prototype.incrementMetric = function (counter, num) {\n    if (num === void 0) {\n      num = 1;\n    }\n\n    if (this.counters[counter] === undefined) {\n      this.putMetric(counter, 0);\n    }\n\n    this.counters[counter] += num;\n  };\n  /**\r\n   * Sets a custom metric to a specified value. Will create a new custom metric if one with the\r\n   * given name does not exist.\r\n   * @param counter Name of the custom metric\r\n   * @param num Set custom metric to this value\r\n   */\n\n\n  Trace.prototype.putMetric = function (counter, num) {\n    if (isValidMetricName(counter, this.name)) {\n      this.counters[counter] = num;\n    } else {\n      throw ERROR_FACTORY.create(\"invalide custom metric name\"\n      /* INVALID_CUSTOM_METRIC_NAME */\n      , {\n        customMetricName: counter\n      });\n    }\n  };\n  /**\r\n   * Returns the value of the custom metric by that name. If a custom metric with that name does\r\n   * not exist will return zero.\r\n   * @param counter\r\n   */\n\n\n  Trace.prototype.getMetric = function (counter) {\n    return this.counters[counter] || 0;\n  };\n  /**\r\n   * Sets a custom attribute of a trace to a certain value.\r\n   * @param attr\r\n   * @param value\r\n   */\n\n\n  Trace.prototype.putAttribute = function (attr, value) {\n    var isValidName = isValidCustomAttributeName(attr);\n    var isValidValue = isValidCustomAttributeValue(value);\n\n    if (isValidName && isValidValue) {\n      this.customAttributes[attr] = value;\n      return;\n    } // Throw appropriate error when the attribute name or value is invalid.\n\n\n    if (!isValidName) {\n      throw ERROR_FACTORY.create(\"invalid attribute name\"\n      /* INVALID_ATTRIBUTE_NAME */\n      , {\n        attributeName: attr\n      });\n    }\n\n    if (!isValidValue) {\n      throw ERROR_FACTORY.create(\"invalid attribute value\"\n      /* INVALID_ATTRIBUTE_VALUE */\n      , {\n        attributeValue: value\n      });\n    }\n  };\n  /**\r\n   * Retrieves the value a custom attribute of a trace is set to.\r\n   * @param attr\r\n   */\n\n\n  Trace.prototype.getAttribute = function (attr) {\n    return this.customAttributes[attr];\n  };\n\n  Trace.prototype.removeAttribute = function (attr) {\n    if (this.customAttributes[attr] === undefined) {\n      return;\n    }\n\n    delete this.customAttributes[attr];\n  };\n\n  Trace.prototype.getAttributes = function () {\n    return tslib.__assign({}, this.customAttributes);\n  };\n\n  Trace.prototype.setStartTime = function (startTime) {\n    this.startTimeUs = startTime;\n  };\n\n  Trace.prototype.setDuration = function (duration) {\n    this.durationUs = duration;\n  };\n  /**\r\n   * Calculates and assigns the duration and start time of the trace using the measure performance\r\n   * entry.\r\n   */\n\n\n  Trace.prototype.calculateTraceMetrics = function () {\n    var perfMeasureEntries = this.api.getEntriesByName(this.traceMeasure);\n    var perfMeasureEntry = perfMeasureEntries && perfMeasureEntries[0];\n\n    if (perfMeasureEntry) {\n      this.durationUs = Math.floor(perfMeasureEntry.duration * 1000);\n      this.startTimeUs = Math.floor((perfMeasureEntry.startTime + this.api.getTimeOrigin()) * 1000);\n    }\n  };\n  /**\r\n   * @param navigationTimings A single element array which contains the navigationTIming object of\r\n   * the page load\r\n   * @param paintTimings A array which contains paintTiming object of the page load\r\n   * @param firstInputDelay First input delay in millisec\r\n   */\n\n\n  Trace.createOobTrace = function (navigationTimings, paintTimings, firstInputDelay) {\n    var route = Api.getInstance().getUrl();\n\n    if (!route) {\n      return;\n    }\n\n    var trace = new Trace(OOB_TRACE_PAGE_LOAD_PREFIX + route, true);\n    var timeOriginUs = Math.floor(Api.getInstance().getTimeOrigin() * 1000);\n    trace.setStartTime(timeOriginUs); // navigationTimings includes only one element.\n\n    if (navigationTimings && navigationTimings[0]) {\n      trace.setDuration(Math.floor(navigationTimings[0].duration * 1000));\n      trace.putMetric('domInteractive', Math.floor(navigationTimings[0].domInteractive * 1000));\n      trace.putMetric('domContentLoadedEventEnd', Math.floor(navigationTimings[0].domContentLoadedEventEnd * 1000));\n      trace.putMetric('loadEventEnd', Math.floor(navigationTimings[0].loadEventEnd * 1000));\n    }\n\n    var FIRST_PAINT = 'first-paint';\n    var FIRST_CONTENTFUL_PAINT = 'first-contentful-paint';\n\n    if (paintTimings) {\n      var firstPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_PAINT;\n      });\n\n      if (firstPaint && firstPaint.startTime) {\n        trace.putMetric(FIRST_PAINT_COUNTER_NAME, Math.floor(firstPaint.startTime * 1000));\n      }\n\n      var firstContentfulPaint = paintTimings.find(function (paintObject) {\n        return paintObject.name === FIRST_CONTENTFUL_PAINT;\n      });\n\n      if (firstContentfulPaint && firstContentfulPaint.startTime) {\n        trace.putMetric(FIRST_CONTENTFUL_PAINT_COUNTER_NAME, Math.floor(firstContentfulPaint.startTime * 1000));\n      }\n\n      if (firstInputDelay) {\n        trace.putMetric(FIRST_INPUT_DELAY_COUNTER_NAME, Math.floor(firstInputDelay * 1000));\n      }\n    }\n\n    logTrace(trace);\n  };\n\n  Trace.createUserTimingTrace = function (measureName) {\n    var trace = new Trace(measureName, false, measureName);\n    logTrace(trace);\n  };\n\n  return Trace;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nfunction createNetworkRequestEntry(entry) {\n  var performanceEntry = entry;\n\n  if (!performanceEntry || performanceEntry.responseStart === undefined) {\n    return;\n  }\n\n  var timeOrigin = Api.getInstance().getTimeOrigin();\n  var startTimeUs = Math.floor((performanceEntry.startTime + timeOrigin) * 1000);\n  var timeToResponseInitiatedUs = performanceEntry.responseStart ? Math.floor((performanceEntry.responseStart - performanceEntry.startTime) * 1000) : undefined;\n  var timeToResponseCompletedUs = Math.floor((performanceEntry.responseEnd - performanceEntry.startTime) * 1000); // Remove the query params from logged network request url.\n\n  var url = performanceEntry.name && performanceEntry.name.split('?')[0];\n  var networkRequest = {\n    url: url,\n    responsePayloadBytes: performanceEntry.transferSize,\n    startTimeUs: startTimeUs,\n    timeToResponseInitiatedUs: timeToResponseInitiatedUs,\n    timeToResponseCompletedUs: timeToResponseCompletedUs\n  };\n  logNetworkRequest(networkRequest);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar FID_WAIT_TIME_MS = 5000;\n\nfunction setupOobResources() {\n  // Do not initialize unless iid is available.\n  if (!getIid()) {\n    return;\n  } // The load event might not have fired yet, and that means performance navigation timing\n  // object has a duration of 0. The setup should run after all current tasks in js queue.\n\n\n  setTimeout(function () {\n    return setupOobTraces();\n  }, 0);\n  setTimeout(function () {\n    return setupNetworkRequests();\n  }, 0);\n  setTimeout(function () {\n    return setupUserTimingTraces();\n  }, 0);\n}\n\nfunction setupNetworkRequests() {\n  var api = Api.getInstance();\n  var resources = api.getEntriesByType('resource');\n\n  for (var _i = 0, resources_1 = resources; _i < resources_1.length; _i++) {\n    var resource = resources_1[_i];\n    createNetworkRequestEntry(resource);\n  }\n\n  api.setupObserver('resource', createNetworkRequestEntry);\n}\n\nfunction setupOobTraces() {\n  var api = Api.getInstance();\n  var navigationTimings = api.getEntriesByType('navigation');\n  var paintTimings = api.getEntriesByType('paint'); // If First Input Desly polyfill is added to the page, report the fid value.\n  // https://github.com/GoogleChromeLabs/first-input-delay\n\n  if (api.onFirstInputDelay) {\n    // If the fid call back is not called for certain time, continue without it.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var timeoutId_1 = setTimeout(function () {\n      Trace.createOobTrace(navigationTimings, paintTimings);\n      timeoutId_1 = undefined;\n    }, FID_WAIT_TIME_MS);\n    api.onFirstInputDelay(function (fid) {\n      if (timeoutId_1) {\n        clearTimeout(timeoutId_1);\n        Trace.createOobTrace(navigationTimings, paintTimings, fid);\n      }\n    });\n  } else {\n    Trace.createOobTrace(navigationTimings, paintTimings);\n  }\n}\n\nfunction setupUserTimingTraces() {\n  var api = Api.getInstance(); // Run through the measure performance entries collected up to this point.\n\n  var measures = api.getEntriesByType('measure');\n\n  for (var _i = 0, measures_1 = measures; _i < measures_1.length; _i++) {\n    var measure = measures_1[_i];\n    createUserTimingTrace(measure);\n  } // Setup an observer to capture the measures from this point on.\n\n\n  api.setupObserver('measure', createUserTimingTrace);\n}\n\nfunction createUserTimingTrace(measure) {\n  var measureName = measure.name; // Do not create a trace, if the user timing marks and measures are created by the sdk itself.\n\n  if (measureName.substring(0, TRACE_MEASURE_PREFIX.length) === TRACE_MEASURE_PREFIX) {\n    return;\n  }\n\n  Trace.createUserTimingTrace(measureName);\n}\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar PerformanceController =\n/** @class */\nfunction () {\n  function PerformanceController(app) {\n    this.app = app;\n\n    if (Api.getInstance().requiredApisAvailable()) {\n      setupTransportService();\n      getInitializationPromise().then(setupOobResources, setupOobResources);\n    } else {\n      consoleLogger.info('Firebase Performance cannot start if browser does not support fetch and Promise or cookie is disabled.');\n    }\n  }\n\n  PerformanceController.prototype.trace = function (name) {\n    return new Trace(name);\n  };\n\n  Object.defineProperty(PerformanceController.prototype, \"instrumentationEnabled\", {\n    get: function get() {\n      return SettingsService.getInstance().instrumentationEnabled;\n    },\n    set: function set(val) {\n      SettingsService.getInstance().instrumentationEnabled = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(PerformanceController.prototype, \"dataCollectionEnabled\", {\n    get: function get() {\n      return SettingsService.getInstance().dataCollectionEnabled;\n    },\n    set: function set(val) {\n      SettingsService.getInstance().dataCollectionEnabled = val;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return PerformanceController;\n}();\n/**\r\n * @license\r\n * Copyright 2019 Google Inc.\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n\nvar DEFAULT_ENTRY_NAME = '[DEFAULT]';\n\nfunction registerPerformance(instance) {\n  var factoryMethod = function factoryMethod(app, installations) {\n    if (app.name !== DEFAULT_ENTRY_NAME) {\n      throw ERROR_FACTORY.create(\"FB not default\"\n      /* FB_NOT_DEFAULT */\n      );\n    }\n\n    if (typeof window === 'undefined') {\n      throw ERROR_FACTORY.create(\"no window\"\n      /* NO_WINDOW */\n      );\n    }\n\n    setupApi(window);\n    SettingsService.getInstance().firebaseAppInstance = app;\n    SettingsService.getInstance().installationsService = installations;\n    return new PerformanceController(app);\n  }; // Register performance with firebase-app.\n\n\n  instance.INTERNAL.registerComponent(new component.Component('performance', function (container) {\n    /* Dependencies */\n    // getImmediate for FirebaseApp will always succeed\n    var app = container.getProvider('app').getImmediate(); // The following call will always succeed because perf has `import '@firebase/installations'`\n\n    var installations = container.getProvider('installations').getImmediate();\n    return factoryMethod(app, installations);\n  }, \"PUBLIC\"\n  /* PUBLIC */\n  ));\n  instance.registerVersion(name, version);\n}\n\nregisterPerformance(firebase);\nexports.registerPerformance = registerPerformance;","import '@firebase/performance';"],"sourceRoot":""}